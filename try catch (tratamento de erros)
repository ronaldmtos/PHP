<?php

try {

	// LANÇA UMA EXCEÇÃO MANUALMENTE COM UMA MENSAGEM E UM CÓDIGO
	throw new Exception("HOUVE UM ERRO.", 400);	

} catch (Exception $e) {

	// CRIA UM ARRAY ASSOCIATIVO COM OS DETALHES DA EXCEÇÃO E O CONVERTE PARA JSON
	echo json_encode(array(
		"message" => $e->getMessage(), // PEGA A MENSAGEM DA EXCEÇÃO ("HOUVE UM ERRO.")
		"line" => $e->getLine(),       // PEGA A LINHA ONDE A EXCEÇÃO FOI LANÇADA
		"file" => $e->getFile(),       // PEGA O ARQUIVO ONDE A EXCEÇÃO FOI LANÇADA
		"code" => $e->getCode()        // PEGA O CÓDIGO DA EXCEÇÃO (400)
	));

}

?>

















<?php

// FUNÇÃO PARA TRATAR O NOME
function trataNome($name) {

    // VERIFICA SE O NOME FOI INFORMADO
    if (!$name){

        // SE NÃO HOUVER NOME, LANÇA UMA EXCEÇÃO COM MENSAGEM E CÓDIGO DE ERRO
        throw new Exception("Nenhum nome foi informado.", 1);        

    }

    // IMPRIME O NOME COM A PRIMEIRA LETRA EM MAIÚSCULA
    echo ucfirst($name)."<br>";

}

// BLOCO TENTANDO EXECUTAR O CÓDIGO
try {

    // CHAMA A FUNÇÃO COM UM NOME VÁLIDO
    trataNome("João");

    // CHAMA A FUNÇÃO COM UM NOME VAZIO (GERARÁ ERRO)
    trataNome("");

} catch (Exception $e) {

    // CAPTURA O ERRO E EXIBE A MENSAGEM DA EXCEÇÃO
    echo $e->getMessage();

} finally {

    // ESTE CÓDIGO SERÁ EXECUTADO SEMPRE, INDEPENDENTEMENTE DE ERROS
    echo "Executou o Try!";

}

?>
